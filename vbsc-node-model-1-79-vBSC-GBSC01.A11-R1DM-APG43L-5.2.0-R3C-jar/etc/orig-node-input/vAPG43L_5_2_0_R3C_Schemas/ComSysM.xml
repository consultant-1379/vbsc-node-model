<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (c) 2021 Ericsson AB.
	All rights reserved

	DX ECIM Tool-chain generated this file on Apr 9, 2021 5:40:50 AM using:
	* com.ericsson.ecim.m2m 3.14.0.202102101537
	* com.ericsson.ecim.dsl 3.14.0.202102101537
	* com.ericsson.ecim.edm 3.14.0.202102101537
--><!DOCTYPE models SYSTEM "mp.dtd">
<models>
    <dtdVersion>K</dtdVersion>
    <momMetaData>
        <momTitle>ComSysM</momTitle>
        <momSubTitle>sub title</momSubTitle>
        <momIdentity>
            <docNum>0</docNum>
            <docLang>English</docLang>
            <docRev>0</docRev>
            <docDate>07/10/2011</docDate>
        </momIdentity>
        <createdBy>
            <signature>-</signature>
        </createdBy>
    </momMetaData>
    <mim author="-" contact="-" correction="1" date="2021-04-09" docNo="" name="ComSysM" namespace="urn:com:ericsson:ecim:ComSysM" namespacePrefix="comsysm" organization="Ericsson AB" release="3" revision="A" version="3">
        <description>This fragment defines the features that are used by other fragments or by the managed element itself. &#13;
These include the schema for the managed element that will define the version handling for the model parts and the handling of the NTP server information.&#13;
</description>
        <domainExtension domain="ECIM">
            <extension name="ecimMomName" value="ECIM_SysM"/>
            <extension name="ecimMomVersion" value="3"/>
            <extension name="ecimMomRelease" value="2"/>
            <extension name="ecimMomCorrection" value="0"/>
        </domainExtension>
        <implements correction="0" name="ECIM_SysM" release="2" version="3"/>
        <enum name="BasicAdmState">
            <description>Basic administrative states for a resource.</description>
            <domainExtension domain="ECIM">
                <extension name="originatingMimVersion" value="2"/>
                <extension name="originatingMimRelease" value="7"/>
                <extension name="originatingMimName" value="ECIM_CommonLibrary"/>
            </domainExtension>
            <enumMember name="LOCKED">
                <description> The resource is administratively prohibited from performing services for its users.</description>
                <value>0</value>
            </enumMember>
            <enumMember name="UNLOCKED">
                <description>The resource is administratively permitted to perform services for its users.
This is independent of its inherent operability.</description>
                <value>1</value>
            </enumMember>
        </enum>
        <derivedDataType name="IpDNSAddress">
            <description>The IpDNSAddress type represents an IP address or a DNS domain name.

A unicast IPv4 address is presented in three-digit decimal blocks. It is specified in dotted-quad decimal notation (i.e. three-digit decimal blocks) in accordance with RFC791, The blocks are separated by a dot.
- The unicast IPV4  address is within range [1-126,128-223].[0-255].[0-255].[0-255], 7-15 characters.
- The IP address range 127.0.0.0 – 127.255.255.255 is reserved for loopback
- The IP address range 0– 0.255.255.255 are reserved
- The IP address range 169.254.1.0 - 169.254.254.255 is used for link-local addresses.

An  IPv6 address is specified by 8 groups of 16 bit hexadecimal values separated by colons as described in RFC 4291. If multiple consecutive groups contain only zeros, the use of “::” indicates one or more groups of 16 bits of zeros, as described in RFC 4291, section 2.2 bullet 2. A link-local address will have prefix fe80::/10. The format of the embedded IPv4/IPv6 addresses is described in RFC 6052.
- IPv6 minimum length = 3 and maximum length = 39.
- Valid characters: 0123456789abcdefABCDEF:

A domain name is specified in dot separated alphanumeric notation  as described in RFC 1034. The domain name consists of one or more parts, called labels, that are delimited by dots.
- Domain Name's length: 253 characters
- Label's length: 63 characters.
- Valid characters: a-z, A-Z, 0,1,2,3,4,5,6,7,8,9,-
- The Label’s first character is a letter.
- Labels shall not start or end with a hyphen.
- Labels shall not start with a numbers
- Labels shall end with a number or a letter.</description>
            <domainExtension domain="ECIM">
                <extension name="originatingMimVersion" value="2"/>
                <extension name="originatingMimRelease" value="7"/>
                <extension name="originatingMimName" value="ECIM_CommonLibrary"/>
            </domainExtension>
            <baseType>
                <string>
                    <lengthRange>
                        <min>1</min>
                        <max>253</max>
                    </lengthRange>
                    <stringLength>
                        <subrange>
                            <min>1</min>
                            <max>253</max>
                        </subrange>
                    </stringLength>
                    <validValues>^((([1-9]|[1-9][0-9]|12[012345689]|1[013456789][0-9]|2[0-1][0-9]|22[0-3])\.)(([0-9]|[0-9][0-9]|[0-1][0-9][0-9]|2[0-4][0-9]|25[0-5])\.){2})([0-9]|[0-9][0-9]|[0-1][0-9][0-9]|2[0-4][0-9]|25[0-5])$|^((([0-9A-Fa-f]{1,4}:){1,5}:((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|(([0-9A-Fa-f]{1,4}:){6,7}:)|(([0-9A-Fa-f]{1,4}:){6}((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3}))|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}(:[0-9A-Fa-f]{1,4}){1,2})|(([0-9A-Fa-f]{1,4}:){4}(:[0-9A-Fa-f]{1,4}(:(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?))|(([0-9A-Fa-f]{1,4}:){4}(:[0-9A-Fa-f]{1,4}){2,3})|((([0-9A-Fa-f]{1,4}:){3}(:[0-9A-Fa-f]{1,4}){1,2})(:(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|(([0-9A-Fa-f]{1,4}:){3}(:[0-9A-Fa-f]{1,4}){3,4})|(([0-9A-Fa-f]{1,4}:){2}(:[0-9A-Fa-f]{1,4}){1,3}(:(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|(([0-9A-Fa-f]{1,4}:){2}(:[0-9A-Fa-f]{1,4}){4,5})|(([0-9A-Fa-f]{1,4}:)(:[0-9A-Fa-f]{1,4}){1,4}(:(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|(([0-9A-Fa-f]{1,4}:)(:[0-9A-Fa-f]{1,4}){5,6})|((:(:[0-9A-Fa-f]{1,4}){1,5})(:(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|(:(:[0-9A-Fa-f]{1,4}){6,7})|(([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(((::FFFF)|(0:0:0:0:0:FFFF))(:(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})))$|^(([a-zA-Z]|[0-9]*[a-zA-Z]*|[a-zA-Z][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\-]*[A-Za-z0-9])$|^ $</validValues>
                </string>
            </baseType>
            <validationRules>
                <rule exceptionText="Must be a valid Ipv4, Ipv6 or DNS address. Ipv4 Example 164.164.0.0 or Ipv6 Example 2001:0db8:85a3:0000:0000:8a2e:0370:7334 or DNS Example www.ericsson.com." format="posix_ere" name="Pattern Constraint"><![CDATA[^((([1-9]|[1-9][0-9]|12[012345689]|1[013456789][0-9]|2[0-1][0-9]|22[0-3])\.)(([0-9]|[0-9][0-9]|[0-1][0-9][0-9]|2[0-4][0-9]|25[0-5])\.){2})([0-9]|[0-9][0-9]|[0-1][0-9][0-9]|2[0-4][0-9]|25[0-5])$|^((([0-9A-Fa-f]{1,4}:){1,5}:((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|(([0-9A-Fa-f]{1,4}:){6,7}:)|(([0-9A-Fa-f]{1,4}:){6}((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3}))|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}(:[0-9A-Fa-f]{1,4}){1,2})|(([0-9A-Fa-f]{1,4}:){4}(:[0-9A-Fa-f]{1,4}(:(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?))|(([0-9A-Fa-f]{1,4}:){4}(:[0-9A-Fa-f]{1,4}){2,3})|((([0-9A-Fa-f]{1,4}:){3}(:[0-9A-Fa-f]{1,4}){1,2})(:(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|(([0-9A-Fa-f]{1,4}:){3}(:[0-9A-Fa-f]{1,4}){3,4})|(([0-9A-Fa-f]{1,4}:){2}(:[0-9A-Fa-f]{1,4}){1,3}(:(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|(([0-9A-Fa-f]{1,4}:){2}(:[0-9A-Fa-f]{1,4}){4,5})|(([0-9A-Fa-f]{1,4}:)(:[0-9A-Fa-f]{1,4}){1,4}(:(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|(([0-9A-Fa-f]{1,4}:)(:[0-9A-Fa-f]{1,4}){5,6})|((:(:[0-9A-Fa-f]{1,4}){1,5})(:(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|(:(:[0-9A-Fa-f]{1,4}){6,7})|(([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(((::FFFF)|(0:0:0:0:0:FFFF))(:(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})))$|^(([a-zA-Z]|[0-9]*[a-zA-Z]*|[a-zA-Z][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\-]*[A-Za-z0-9])$|^ $]]></rule>
            </validationRules>
        </derivedDataType>
        <derivedDataType name="EcimPasswordString">
            <description>The password string.</description>
            <baseType>
                <string/>
            </baseType>
        </derivedDataType>
        <class name="SysM">
            <description>This is the System Management MO. &#13;
&#13;
It is a parent to the MOs which represent the system level functions such as time handling and version handling as well as file transfer capabilities and netconf configuration.</description>
            <systemCreated/>
            <root/>
            <attribute name="sysMId">
                <description>The value component of the RDN.&#13;
&#13;
It is set automatically when the MO instance is created.</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="userLabel">
                <description>An additional descriptive text.</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <isNillable/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
        </class>
        <class name="NtpServer">
            <description>A persistent NTP client mode network association with a specified remote server or local reference clock address. </description>
            <specification>RFC1305; RFC5905</specification>
            <attribute name="userLabel">
                <description>An additional descriptive text.</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <isNillable/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="ntpServerId">
                <description>The value component of the RDN.</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="serverAddress">
                <description>The address of the NTP server with which a persistent client server mode association will be made.&#13;
&#13;
The serverAddress represents either a V4 or a V6 IP address or a DNS domain name.</description>
                <mandatory/>
                <dataType>
                    <derivedDataTypeRef name="IpDNSAddress">
                        <mimName>ComSysM</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="administrativeState">
                <description>Locks or unlocks the operation of the NTP client function. &#13;
&#13;
This is a convenience function to permit some or all NtpServer instances to be temporarily locked without having to delete the object.</description>
                <mandatory/>
                <dataType>
                    <enumRef name="BasicAdmState">
                        <mimName>ComSysM</mimName>
                    </enumRef>
                </dataType>
            </attribute>
        </class>
        <class name="Schema">
            <description>Represents a MIM model fragment whose corresponding functionality is operational in the Managed Element.</description>
            <systemCreated/>
            <action name="export">
                <description>Pushes the schema file out from the ME.&#13;
&#13;
The URI shall contain both the file name and the destination address. The password is optional.</description>
                <returnType>
                    <void/>
                </returnType>
                <parameter name="uri">
                    <description>The URI used for identifying the adress to the remote location to which the file shall be transferred to.</description>
                    <in/>
                    <dataType>
                        <string/>
                    </dataType>
                </parameter>
                <parameter name="password">
                    <description>The password used for connecting to the remote file location.</description>
                    <domainExtension domain="ECIM">
                        <extension name="isNillable" value="true"/>
                    </domainExtension>
                    <isNillable/>
                    <in/>
                    <dataType>
                        <derivedDataTypeRef name="EcimPasswordString">
                            <mimName>ComSysM</mimName>
                        </derivedDataTypeRef>
                    </dataType>
                </parameter>
            </action>
            <attribute name="schemaId">
                <description>The value component of the RDN.&#13;
&#13;
From a usability perspective, the value could e.g. be set to the corresponding model name.</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="identifier">
                <description>Represents the name of the data model fragment that the schema represents.</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <readOnly/>
                <isNillable/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="baseModelIdentifier">
                <description>Represents the name of the common information model fragment that the data model fragment is derived from.</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <readOnly/>
                <isNillable/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="version">
                <description>Represents the full version information for the data model fragment that the schema represents.</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <readOnly/>
                <isNillable/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="baseModelVersion">
                <description>The full version information for the common information model fragment that the data model fragment is derived from. </description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <readOnly/>
                <isNillable/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="selectedModelOptions">
                <description>Contains the model features used in the generation of the MIM. &#13;
&#13;
The MS can query the information from the model without having to access the MIM file itself.</description>
                <readOnly/>
                <dataType>
                    <sequence>
                        <string/>
                        <minLength>0</minLength>
                        <nonUnique/>
                    </sequence>
                </dataType>
            </attribute>
        </class>
        <class name="NetconfTls">
            <description>Represents the Netconf configuration management service over Transport Layer Security (TLS).</description>
            <systemCreated/>
            <validationRules>
                <rule exceptionText="" format="ECIM_Schematron_1.0" name="every $value in @nodeCredential and @trustCategory satisfies exists($value)"><![CDATA[<schema xmlns="http://purl.oclc.org/dsdl/schematron">
        <pattern>
                <rule>
                        <assert test='(every $value in @nodeCredential satisfies exists($value))'>ERROR: the attribute value must be an existing NodeCredential MO.</assert>
                        <assert test='(every $value in @trustCategory satisfies exists($value))'>ERROR: the attribute value must be an existing TrustCategory MO.</assert>
                </rule>
        </pattern>
</schema>]]></rule>
            </validationRules>
            <dependenciesScript><![CDATA[<schema xmlns="http://purl.oclc.org/dsdl/schematron">
        <pattern>
                <rule>
                        <assert test='(every $value in @nodeCredential satisfies exists($value))'>ERROR: the attribute value must be an existing NodeCredential MO.</assert>
                        <assert test='(every $value in @trustCategory satisfies exists($value))'>ERROR: the attribute value must be an existing TrustCategory MO.</assert>
                </rule>
        </pattern>
</schema>]]></dependenciesScript>
            <attribute name="netconfTlsId">
                <description>The value component of the RDN.</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="nodeCredential">
                <description>The credential used for the NETCONF service. &#13;
Specifies the DN of a NodeCredential MO in Certificate Management.&#13;
</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <isNillable/>
                <dataType>
                    <moRef name="ManagedObject"/>
                </dataType>
            </attribute>
            <attribute name="trustCategory">
                <description>The set of certificates trusted by the NETCONF service. &#13;
Specifies the DN of a TrustCategory MO in Certificate Management.&#13;
</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <isNillable/>
                <dataType>
                    <moRef name="ManagedObject"/>
                </dataType>
            </attribute>
            <attribute name="administrativeState">
                <description>The administrative state for the Netconf target.&#13;
When LOCKED all on-going netconf connections will immediately be terminated.&#13;
&#13;
NOTE: Setting the administrativState to LOCKED for all Netconf and CLI interfaces disables O&amp;M access to the ME. Refer to product specific troubleshooting instructions to resolve such a scenario.</description>
                <mandatory/>
                <dataType>
                    <enumRef name="BasicAdmState">
                        <mimName>ComSysM</mimName>
                    </enumRef>
                </dataType>
            </attribute>
        </class>
        <class name="NetconfSsh">
            <description>Represents the Netconf configuration management service over Secure Shell.</description>
            <systemCreated/>
            <attribute name="netconfSshId">
                <description>The value component of the RDN.</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="administrativeState">
                <description>The administrative state for the Netconf target.&#13;
When LOCKED all on-going netconf connections will immediately be terminated.&#13;
&#13;
NOTE: Setting the administrativState to LOCKED for all Netconf and CLI interfaces disables O&amp;M access to the ME. Refer to product specific troubleshooting instructions to resolve such a scenario.</description>
                <mandatory/>
                <dataType>
                    <enumRef name="BasicAdmState">
                        <mimName>ComSysM</mimName>
                    </enumRef>
                </dataType>
            </attribute>
        </class>
        <class name="CliSsh">
            <description>Represents the CLI configuration management service over Secure Shell.</description>
            <systemCreated/>
            <attribute name="cliSshId">
                <description>The value component of the RDN.</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="administrativeState">
                <description>The administrative state for the CLI target.&#13;
When LOCKED all on-going CLI connections will immediately be terminated.&#13;
&#13;
NOTE: Setting the administrativState to LOCKED for all Netconf and CLI interfaces disables O&amp;M access to the ME. Refer to product specific troubleshooting instructions to resolve such a scenario.</description>
                <mandatory/>
                <dataType>
                    <enumRef name="BasicAdmState">
                        <mimName>ComSysM</mimName>
                    </enumRef>
                </dataType>
            </attribute>
        </class>
        <class name="CliTls">
            <description>Represents the CLI configuration management service over Transport Layer Security (TLS).</description>
            <systemCreated/>
            <validationRules>
                <rule exceptionText="" format="ECIM_Schematron_1.0" name="every $value in @nodeCredential and @trustCategory satisfies exists($value)"><![CDATA[<schema xmlns="http://purl.oclc.org/dsdl/schematron">
        <pattern>
                <rule>
                        <assert test='(every $value in @nodeCredential satisfies exists($value))'>ERROR: the attribute value must be an existing NodeCredential MO.</assert>
                        <assert test='(every $value in @trustCategory satisfies exists($value))'>ERROR: the attribute value must be an existing TrustCategory MO.</assert>
                </rule>
        </pattern>
</schema>]]></rule>
            </validationRules>
            <dependenciesScript><![CDATA[<schema xmlns="http://purl.oclc.org/dsdl/schematron">
        <pattern>
                <rule>
                        <assert test='(every $value in @nodeCredential satisfies exists($value))'>ERROR: the attribute value must be an existing NodeCredential MO.</assert>
                        <assert test='(every $value in @trustCategory satisfies exists($value))'>ERROR: the attribute value must be an existing TrustCategory MO.</assert>
                </rule>
        </pattern>
</schema>]]></dependenciesScript>
            <attribute name="cliTlsId">
                <description>The value component of the RDN.</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="nodeCredential">
                <description>The credential used for the CLI service. &#13;
Specifies the DN of a NodeCredential MO in Certificate Management.&#13;
</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <isNillable/>
                <dataType>
                    <moRef name="ManagedObject"/>
                </dataType>
            </attribute>
            <attribute name="trustCategory">
                <description>The set of certificates trusted by the CLI service. &#13;
Specifies the DN of a TrustCategory MO in Certificate Management.&#13;
</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <isNillable/>
                <dataType>
                    <moRef name="ManagedObject"/>
                </dataType>
            </attribute>
            <attribute name="administrativeState">
                <description>The administrative state for the CLI target.&#13;
When LOCKED all on-going cli connections will immediately be terminated.&#13;
&#13;
NOTE: Setting the administrativState to LOCKED for all Netconf and CLI interfaces disables O&amp;M access to the ME. Refer to product specific troubleshooting instructions to resolve such a scenario.</description>
                <mandatory/>
                <dataType>
                    <enumRef name="BasicAdmState">
                        <mimName>ComSysM</mimName>
                    </enumRef>
                </dataType>
            </attribute>
        </class>
        <relationship name="SysM_to_NtpServer">
            <containment>
                <parent>
                    <hasClass name="SysM">
                        <mimName>ComSysM</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="NtpServer">
                        <mimName>ComSysM</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                    </cardinality>
                </child>
                <domainExtension domain="ECIM">
                    <extension name="canCreate" value="true"/>
                    <extension name="canDelete" value="true"/>
                </domainExtension>
            </containment>
        </relationship>
        <relationship name="SysM_to_Schema">
            <containment>
                <parent>
                    <hasClass name="SysM">
                        <mimName>ComSysM</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="Schema">
                        <mimName>ComSysM</mimName>
                    </hasClass>
                    <cardinality>
                        <min>2</min>
                    </cardinality>
                </child>
                <domainExtension domain="ECIM">
                    <extension name="canCreate" value="false"/>
                    <extension name="canDelete" value="false"/>
                </domainExtension>
                <notCreatable/>
                <notDeleteable/>
            </containment>
        </relationship>
        <relationship name="SysM_to_NetconfTls">
            <containment>
                <parent>
                    <hasClass name="SysM">
                        <mimName>ComSysM</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="NetconfTls">
                        <mimName>ComSysM</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                </child>
                <domainExtension domain="ECIM">
                    <extension name="canCreate" value="false"/>
                    <extension name="canDelete" value="false"/>
                </domainExtension>
                <notCreatable/>
                <notDeleteable/>
            </containment>
        </relationship>
        <relationship name="SysM_to_NetconfSsh">
            <containment>
                <parent>
                    <hasClass name="SysM">
                        <mimName>ComSysM</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="NetconfSsh">
                        <mimName>ComSysM</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                </child>
                <domainExtension domain="ECIM">
                    <extension name="canCreate" value="false"/>
                    <extension name="canDelete" value="false"/>
                </domainExtension>
                <notCreatable/>
                <notDeleteable/>
            </containment>
        </relationship>
        <relationship name="SysM_to_CliSsh">
            <containment>
                <parent>
                    <hasClass name="SysM">
                        <mimName>ComSysM</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="CliSsh">
                        <mimName>ComSysM</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                </child>
                <domainExtension domain="ECIM">
                    <extension name="canCreate" value="false"/>
                    <extension name="canDelete" value="false"/>
                </domainExtension>
                <notCreatable/>
                <notDeleteable/>
            </containment>
        </relationship>
        <relationship name="SysM_to_CliTls">
            <containment>
                <parent>
                    <hasClass name="SysM">
                        <mimName>ComSysM</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="CliTls">
                        <mimName>ComSysM</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                </child>
                <domainExtension domain="ECIM">
                    <extension name="canCreate" value="false"/>
                    <extension name="canDelete" value="false"/>
                </domainExtension>
                <notCreatable/>
                <notDeleteable/>
            </containment>
        </relationship>
    </mim>
    <interMim>
        <relationship name="SystemFunctions_to_SysM">
            <containment>
                <parent>
                    <hasClass name="SystemFunctions">
                        <mimName>ComTop</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="SysM">
                        <mimName>ComSysM</mimName>
                    </hasClass>
                    <cardinality>
                        <min>1</min>
                        <max>1</max>
                    </cardinality>
                </child>
                <domainExtension domain="ECIM">
                    <extension name="canCreate" value="false"/>
                    <extension name="canDelete" value="false"/>
                </domainExtension>
                <notCreatable/>
                <notDeleteable/>
            </containment>
        </relationship>
    </interMim>
</models>
